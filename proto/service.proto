syntax = "proto3";
package sample.proto;
option go_package = "proto";

// Vendor packages
import "github.com/gogo/protobuf/gogoproto/gogo.proto";

// Extensions
// https://github.com/gogo/protobuf/blob/master/extensions.md
option (gogoproto.gostring_all) = true;
option (gogoproto.equal_all) = true;
option (gogoproto.verbose_equal_all) = true;
option (gogoproto.goproto_stringer_all) = false;
option (gogoproto.stringer_all) =  true;
option (gogoproto.populate_all) = true;
option (gogoproto.testgen_all) = true;
option (gogoproto.benchgen_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.compare_all) = true;
option (gogoproto.description_all) = true;

message Empty {}

message Pong {
  bool ok = 1;
}

message Item {
  int32 id = 1;
}

service SampleService {
  rpc Ping(Empty) returns (Pong);
  rpc Items(Empty) returns (stream Item);
}